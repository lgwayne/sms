<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wayne.sms.dao.MathScoreMapper">
  <resultMap id="BaseResultMap" type="com.wayne.sms.pojo.MathScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="BIGINT" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="clazz" jdbcType="VARCHAR" property="clazz" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="regular_score" jdbcType="DOUBLE" property="regularScore" />
    <result column="regular_score_per" jdbcType="DOUBLE" property="regularScorePer" />
    <result column="final_score" jdbcType="DOUBLE" property="finalScore" />
    <result column="final_score_per" jdbcType="DOUBLE" property="finalScorePer" />
    <result column="total_score" jdbcType="DOUBLE" property="totalScore" />
    <result column="gpa" jdbcType="DOUBLE" property="gpa" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    id, stu_id, stu_name, college, major, clazz, grade, course_name, regular_score, regular_score_per, 
    final_score, final_score_per, total_score, gpa
  </sql>
  <select id="selectByExample" parameterType="com.wayne.sms.pojo.MathScoreExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_math_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_math_score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    delete from t_math_score
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <delete id="deleteByExample" parameterType="com.wayne.sms.pojo.MathScoreExample">
    delete from t_math_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>



  <insert id="insert" parameterType="com.wayne.sms.pojo.MathScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_math_score (stu_id, stu_name, college, 
      major, clazz, grade, 
      course_name, regular_score, regular_score_per, 
      final_score, final_score_per, total_score, 
      gpa)
    values (#{stuId,jdbcType=BIGINT}, #{stuName,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{clazz,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, 
      #{courseName,jdbcType=VARCHAR}, #{regularScore,jdbcType=DOUBLE}, #{regularScorePer,jdbcType=DOUBLE}, 
      #{finalScore,jdbcType=DOUBLE}, #{finalScorePer,jdbcType=DOUBLE}, #{totalScore,jdbcType=DOUBLE}, 
      #{gpa,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.wayne.sms.pojo.MathScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_math_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="clazz != null">
        clazz,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="regularScore != null">
        regular_score,
      </if>
      <if test="regularScorePer != null">
        regular_score_per,
      </if>
      <if test="finalScore != null">
        final_score,
      </if>
      <if test="finalScorePer != null">
        final_score_per,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="gpa != null">
        gpa,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=BIGINT},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="regularScore != null">
        #{regularScore,jdbcType=DOUBLE},
      </if>
      <if test="regularScorePer != null">
        #{regularScorePer,jdbcType=DOUBLE},
      </if>
      <if test="finalScore != null">
        #{finalScore,jdbcType=DOUBLE},
      </if>
      <if test="finalScorePer != null">
        #{finalScorePer,jdbcType=DOUBLE},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=DOUBLE},
      </if>
      <if test="gpa != null">
        #{gpa,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wayne.sms.pojo.MathScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    update t_math_score
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=BIGINT},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        clazz = #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="regularScore != null">
        regular_score = #{regularScore,jdbcType=DOUBLE},
      </if>
      <if test="regularScorePer != null">
        regular_score_per = #{regularScorePer,jdbcType=DOUBLE},
      </if>
      <if test="finalScore != null">
        final_score = #{finalScore,jdbcType=DOUBLE},
      </if>
      <if test="finalScorePer != null">
        final_score_per = #{finalScorePer,jdbcType=DOUBLE},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=DOUBLE},
      </if>
      <if test="gpa != null">
        gpa = #{gpa,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wayne.sms.pojo.MathScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 28 13:13:30 CST 2020.
    -->
    update t_math_score
    set stu_id = #{stuId,jdbcType=BIGINT},
      stu_name = #{stuName,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      clazz = #{clazz,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      course_name = #{courseName,jdbcType=VARCHAR},
      regular_score = #{regularScore,jdbcType=DOUBLE},
      regular_score_per = #{regularScorePer,jdbcType=DOUBLE},
      final_score = #{finalScore,jdbcType=DOUBLE},
      final_score_per = #{finalScorePer,jdbcType=DOUBLE},
      total_score = #{totalScore,jdbcType=DOUBLE},
      gpa = #{gpa,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>

















  <resultMap id="SaCollegeMap" type="com.wayne.sms.pojo.SaCollege">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="avg_regular_score" jdbcType="DECIMAL" property="avgRegularScore" />
    <result column="avg_final_score" jdbcType="DECIMAL" property="avgFinalScore" />
    <result column="std_final_score" jdbcType="DECIMAL" property="stdFinalScore" />
    <result column="avg_total_score" jdbcType="DECIMAL" property="avgTotalScore" />
    <result column="std_total_score" jdbcType="DECIMAL" property="stdTotalScore" />
    <result column="sum_college_stu" jdbcType="BIGINT" property="sumCollegeStu" />
    <result column="sum_excellent" jdbcType="BIGINT" property="sumExcellent" />
    <result column="sum_good" jdbcType="BIGINT" property="sumGood" />
    <result column="sum_medium" jdbcType="BIGINT" property="sumMedium" />
    <result column="sun_pass" jdbcType="BIGINT" property="sunPass" />
    <result column="sum_fail" jdbcType="BIGINT" property="sumFail" />
  </resultMap>

  <resultMap id="SaMajorMap" type="com.wayne.sms.pojo.SaMajor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="avg_regular_score" jdbcType="DECIMAL" property="avgRegularScore" />
    <result column="avg_final_score" jdbcType="DECIMAL" property="avgFinalScore" />
    <result column="std_final_score" jdbcType="DECIMAL" property="stdFinalScore" />
    <result column="avg_total_score" jdbcType="DECIMAL" property="avgTotalScore" />
    <result column="std_total_score" jdbcType="DECIMAL" property="stdTotalScore" />
    <result column="sum_major_stu" jdbcType="BIGINT" property="sumMajorStu" />
    <result column="sum_excellent" jdbcType="BIGINT" property="sumExcellent" />
    <result column="sum_good" jdbcType="BIGINT" property="sumGood" />
    <result column="sum_medium" jdbcType="BIGINT" property="sumMedium" />
    <result column="sum_pass" jdbcType="BIGINT" property="sumPass" />
    <result column="sum_fail" jdbcType="BIGINT" property="sumFail" />
    <result column="std_score" jdbcType="DECIMAL" property="stdScore" />
  </resultMap>


  <resultMap id="SaClazzMap" type="com.wayne.sms.pojo.SaClazz">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="grade" jdbcType="INTEGER" property="grade"/>
    <result column="course_name" jdbcType="VARCHAR" property="courseName"/>
    <result column="college" jdbcType="VARCHAR" property="college"/>
    <result column="major" jdbcType="VARCHAR" property="major"/>
    <result column="clazz" jdbcType="VARCHAR" property="clazz"/>
    <result column="avg_regular_score" jdbcType="DECIMAL" property="avgRegularScore"/>
    <result column="avg_final_score" jdbcType="DECIMAL" property="avgFinalScore"/>
    <result column="std_final_score" jdbcType="DECIMAL" property="stdFinalScore"/>
    <result column="avg_total_score" jdbcType="DECIMAL" property="avgTotalScore"/>
    <result column="std_total_score" jdbcType="DECIMAL" property="stdTotalScore"/>
    <result column="sum_clazz_stu" jdbcType="BIGINT" property="sumClazzStu"/>
    <result column="sum_excellent" jdbcType="BIGINT" property="sumExcellent"/>
    <result column="sum_good" jdbcType="BIGINT" property="sumGood"/>
    <result column="sum_medium" jdbcType="BIGINT" property="sumMedium"/>
    <result column="sum_pass" jdbcType="BIGINT" property="sumPass"/>
    <result column="sum_fail" jdbcType="BIGINT" property="sumFail"/>
    <result column="std_score" jdbcType="DECIMAL" property="stdScore"/>
  </resultMap>

  <select id="selectAsSaCollege" resultMap="SaCollegeMap">
    SELECT
      grade,
      course_name,
      college,
      CAST(
              AVG(regular_score) AS DECIMAL (10, 2)
      ) AS 'avg_regular_score',
      CAST(
              AVG(final_score) AS DECIMAL (10, 2)
      ) AS 'avg_final_score',
      CAST(
              STD(final_score) AS DECIMAL (10, 2)
      ) AS 'std_final_score',
      CAST(
              AVG(total_score) AS DECIMAL (10, 2)
      ) AS 'avg_total_score',
      CAST(
              STD(total_score) AS DECIMAL (10, 2)
      ) AS 'std_total_score',
      COUNT(DISTINCT stu_id) 'sum_college_stu',
      COUNT(
              CASE
              WHEN total_score >= 90 THEN
                stu_id
              END
      ) 'sum_excellent',
      COUNT(
              CASE
              WHEN total_score &lt; 90
                   AND total_score >= 80 THEN
                stu_id
              END
      ) 'sum_good',
      COUNT(
              CASE
              WHEN total_score &lt; 80
                   AND total_score >= 70 THEN
                stu_id
              END
      ) 'sum_medium',
      COUNT(
              CASE
              WHEN total_score &lt; 70
                   AND total_score >= 60 THEN
                stu_id
              END
      ) 'sun_pass',
      COUNT(
              CASE
              WHEN total_score &lt; 60 THEN
                stu_id
              END
      ) 'sum_fail'
    FROM
      t_math_score
    GROUP BY
      grade,
      course_name,
      college;
  </select>

  <select id="selectAsSaMajor" resultMap="SaMajorMap">
    SELECT grade,
    course_name,college,major,
    CAST(
    AVG(regular_score) AS DECIMAL (10, 2)
    ) AS avg_regular_score,
    CAST(
    AVG(final_score) AS DECIMAL (10, 2)
    ) AS avg_final_score,
    CAST(
    STD(final_score) AS DECIMAL (10, 2)
    ) AS std_final_score,
    CAST(
    AVG(total_score) AS DECIMAL (10, 2)
    ) AS avg_total_score,
    CAST(
    STD(total_score) AS DECIMAL (10, 2)
    ) AS std_total_score,
    COUNT(DISTINCT stu_id) sum_major_stu,
    COUNT(
    CASE
    WHEN total_score >= 90 THEN
    stu_id
    END
    ) sum_excellent,
    COUNT(
    CASE
    WHEN total_score &lt; 90
    AND total_score >= 80 THEN
    stu_id
    END
    ) sum_good,
    COUNT(
    CASE
    WHEN total_score &lt; 80
    AND total_score >= 70 THEN
    stu_id
    END
    ) sum_medium,
    COUNT(
    CASE
    WHEN total_score &lt; 70
    AND total_score >= 60 THEN
    stu_id
    END
    ) sum_pass,
    COUNT(
    CASE
    WHEN total_score &lt; 60 THEN
    stu_id
    END
    ) sum_fail
    FROM
    t_math_score
    GROUP BY grade,
    course_name,college,
    major;
  </select>


  <select id="selectAsSaClazz" resultMap="SaClazzMap">
    SELECT
    grade,course_name,college,major,clazz,
    CAST(
    AVG(regular_score) AS DECIMAL (10, 2)
    ) AS avg_regular_score,
    CAST(
    AVG(final_score) AS DECIMAL (10, 2)
    ) AS avg_final_score,
    CAST(
    STD(final_score) AS DECIMAL (10, 2)
    ) AS std_final_score,
    CAST(
    AVG(total_score) AS DECIMAL (10, 2)
    ) AS avg_total_score,
    CAST(
    STD(total_score) AS DECIMAL (10, 2)
    ) AS std_total_score,
    COUNT(DISTINCT stu_id) sum_clazz_stu,
    COUNT(
    CASE
    WHEN total_score >= 90 THEN
    stu_id
    END
    ) sum_excellent,
    COUNT(
    CASE
    WHEN total_score &lt; 90
    AND total_score >= 80 THEN
    stu_id
    END
    ) sum_good,
    COUNT(
    CASE
    WHEN total_score &lt; 80
    AND total_score >= 70 THEN
    stu_id
    END
    ) sum_medium,
    COUNT(
    CASE
    WHEN total_score &lt;70
    AND total_score >= 60 THEN
    stu_id
    END
    ) sum_pass,
    COUNT(
    CASE
    WHEN total_score &lt;60 THEN
    stu_id
    END
    ) sum_fail
    FROM
    t_math_score
    GROUP BY
    course_name,grade,college,
    major,clazz;
  </select>



  <resultMap id="SaStudentMap" type="com.wayne.sms.pojo.SaStudent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="BIGINT" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="clazz" jdbcType="VARCHAR" property="clazz" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="regular_score" jdbcType="DOUBLE" property="regularScore" />
    <result column="regular_score_per" jdbcType="DOUBLE" property="regularScorePer" />
    <result column="final_score" jdbcType="DOUBLE" property="finalScore" />
    <result column="final_score_per" jdbcType="DOUBLE" property="finalScorePer" />
    <result column="total_score" jdbcType="DOUBLE" property="totalScore" />
    <result column="gpa" jdbcType="DOUBLE" property="gpa" />
    <result column="std_score" jdbcType="DOUBLE" property="stdScore" />
  </resultMap>
  <select id="selectAsSaStudent" resultMap="SaStudentMap">
   select id, stu_id, stu_name, college, major, clazz, grade, course_name, regular_score, regular_score_per,
     final_score, final_score_per, total_score, gpa from t_math_score;
  </select>
</mapper>