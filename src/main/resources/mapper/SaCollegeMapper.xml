<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wayne.sms.dao.SaCollegeMapper">
  <resultMap id="BaseResultMap" type="com.wayne.sms.pojo.SaCollege">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="avg_regular_score" jdbcType="DECIMAL" property="avgRegularScore" />
    <result column="avg_final_score" jdbcType="DECIMAL" property="avgFinalScore" />
    <result column="std_final_score" jdbcType="DECIMAL" property="stdFinalScore" />
    <result column="avg_total_score" jdbcType="DECIMAL" property="avgTotalScore" />
    <result column="std_total_score" jdbcType="DECIMAL" property="stdTotalScore" />
    <result column="sum_college_stu" jdbcType="BIGINT" property="sumCollegeStu" />
    <result column="sum_excellent" jdbcType="BIGINT" property="sumExcellent" />
    <result column="sum_good" jdbcType="BIGINT" property="sumGood" />
    <result column="sum_medium" jdbcType="BIGINT" property="sumMedium" />
    <result column="sun_pass" jdbcType="BIGINT" property="sunPass" />
    <result column="sum_fail" jdbcType="BIGINT" property="sumFail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    id, grade, course_name, college, avg_regular_score, avg_final_score, std_final_score, 
    avg_total_score, std_total_score, sum_college_stu, sum_excellent, sum_good, sum_medium, 
    sun_pass, sum_fail
  </sql>
  <select id="selectByExample" parameterType="com.wayne.sms.pojo.SaCollegeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_sa_college
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_sa_college
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    delete from t_sa_college
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wayne.sms.pojo.SaCollege">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    insert into t_sa_college (id, grade, course_name, 
      college, avg_regular_score, avg_final_score, 
      std_final_score, avg_total_score, std_total_score, 
      sum_college_stu, sum_excellent, sum_good, 
      sum_medium, sun_pass, sum_fail
      )
    values (#{id,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, 
      #{college,jdbcType=VARCHAR}, #{avgRegularScore,jdbcType=DECIMAL}, #{avgFinalScore,jdbcType=DECIMAL}, 
      #{stdFinalScore,jdbcType=DECIMAL}, #{avgTotalScore,jdbcType=DECIMAL}, #{stdTotalScore,jdbcType=DECIMAL}, 
      #{sumCollegeStu,jdbcType=BIGINT}, #{sumExcellent,jdbcType=BIGINT}, #{sumGood,jdbcType=BIGINT}, 
      #{sumMedium,jdbcType=BIGINT}, #{sunPass,jdbcType=BIGINT}, #{sumFail,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wayne.sms.pojo.SaCollege">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    insert into t_sa_college
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="avgRegularScore != null">
        avg_regular_score,
      </if>
      <if test="avgFinalScore != null">
        avg_final_score,
      </if>
      <if test="stdFinalScore != null">
        std_final_score,
      </if>
      <if test="avgTotalScore != null">
        avg_total_score,
      </if>
      <if test="stdTotalScore != null">
        std_total_score,
      </if>
      <if test="sumCollegeStu != null">
        sum_college_stu,
      </if>
      <if test="sumExcellent != null">
        sum_excellent,
      </if>
      <if test="sumGood != null">
        sum_good,
      </if>
      <if test="sumMedium != null">
        sum_medium,
      </if>
      <if test="sunPass != null">
        sun_pass,
      </if>
      <if test="sumFail != null">
        sum_fail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="avgRegularScore != null">
        #{avgRegularScore,jdbcType=DECIMAL},
      </if>
      <if test="avgFinalScore != null">
        #{avgFinalScore,jdbcType=DECIMAL},
      </if>
      <if test="stdFinalScore != null">
        #{stdFinalScore,jdbcType=DECIMAL},
      </if>
      <if test="avgTotalScore != null">
        #{avgTotalScore,jdbcType=DECIMAL},
      </if>
      <if test="stdTotalScore != null">
        #{stdTotalScore,jdbcType=DECIMAL},
      </if>
      <if test="sumCollegeStu != null">
        #{sumCollegeStu,jdbcType=BIGINT},
      </if>
      <if test="sumExcellent != null">
        #{sumExcellent,jdbcType=BIGINT},
      </if>
      <if test="sumGood != null">
        #{sumGood,jdbcType=BIGINT},
      </if>
      <if test="sumMedium != null">
        #{sumMedium,jdbcType=BIGINT},
      </if>
      <if test="sunPass != null">
        #{sunPass,jdbcType=BIGINT},
      </if>
      <if test="sumFail != null">
        #{sumFail,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wayne.sms.pojo.SaCollege">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    update t_sa_college
    <set>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="avgRegularScore != null">
        avg_regular_score = #{avgRegularScore,jdbcType=DECIMAL},
      </if>
      <if test="avgFinalScore != null">
        avg_final_score = #{avgFinalScore,jdbcType=DECIMAL},
      </if>
      <if test="stdFinalScore != null">
        std_final_score = #{stdFinalScore,jdbcType=DECIMAL},
      </if>
      <if test="avgTotalScore != null">
        avg_total_score = #{avgTotalScore,jdbcType=DECIMAL},
      </if>
      <if test="stdTotalScore != null">
        std_total_score = #{stdTotalScore,jdbcType=DECIMAL},
      </if>
      <if test="sumCollegeStu != null">
        sum_college_stu = #{sumCollegeStu,jdbcType=BIGINT},
      </if>
      <if test="sumExcellent != null">
        sum_excellent = #{sumExcellent,jdbcType=BIGINT},
      </if>
      <if test="sumGood != null">
        sum_good = #{sumGood,jdbcType=BIGINT},
      </if>
      <if test="sumMedium != null">
        sum_medium = #{sumMedium,jdbcType=BIGINT},
      </if>
      <if test="sunPass != null">
        sun_pass = #{sunPass,jdbcType=BIGINT},
      </if>
      <if test="sumFail != null">
        sum_fail = #{sumFail,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wayne.sms.pojo.SaCollege">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 02 10:51:13 CST 2020.
    -->
    update t_sa_college
    set grade = #{grade,jdbcType=INTEGER},
      course_name = #{courseName,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      avg_regular_score = #{avgRegularScore,jdbcType=DECIMAL},
      avg_final_score = #{avgFinalScore,jdbcType=DECIMAL},
      std_final_score = #{stdFinalScore,jdbcType=DECIMAL},
      avg_total_score = #{avgTotalScore,jdbcType=DECIMAL},
      std_total_score = #{stdTotalScore,jdbcType=DECIMAL},
      sum_college_stu = #{sumCollegeStu,jdbcType=BIGINT},
      sum_excellent = #{sumExcellent,jdbcType=BIGINT},
      sum_good = #{sumGood,jdbcType=BIGINT},
      sum_medium = #{sumMedium,jdbcType=BIGINT},
      sun_pass = #{sunPass,jdbcType=BIGINT},
      sum_fail = #{sumFail,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByExample" parameterType="com.wayne.sms.pojo.SaCollegeExample">
    delete from t_sa_college
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <update id="truncateSaCollege">
    truncate t_sa_college
  </update>

  <insert id="insertIntoSaCollege" parameterType="java.util.ArrayList" useGeneratedKeys="true">
    insert into t_sa_college(grade, course_name,
    college, `avg_regular_score`, avg_final_score,
    std_final_score, avg_total_score, std_total_score,
    sum_college_stu, sum_excellent, sum_good,
    sum_medium, sun_pass, sum_fail
    )values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.grade},
      #{item.courseName},
      #{item.college},
      #{item.avgRegularScore},
      #{item.avgFinalScore},
      #{item.stdFinalScore},
      #{item.avgTotalScore},
      #{item.stdTotalScore},
      #{item.sumCollegeStu},
      #{item.sumExcellent},
      #{item.sumGood},
      #{item.sumMedium},
      #{item.sunPass},
      #{item.sumFail})
    </foreach>;
  </insert>

</mapper>